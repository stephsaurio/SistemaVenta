package com.mycompany.sistemaventa;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.JFileChooser;

/**
 *
 * @author stephany
 */
public class ConsultaCupones extends javax.swing.JFrame {

    private Cupones cupon;

    /**
     * Creates new form ConsultaCupones
     */
    public ConsultaCupones() throws IOException {
        initComponents();
        cargarCuponesDesdeArchivo();
        pintarTabla();

        jComboBox1.addItem("Porcentaje");
        jComboBox1.addItem("Monto Fijo");

        DefaultTableModel t = new DefaultTableModel(new String[]{"Codigo", "Valor", "Tipo", "FechaVencimiento"}, SistemaVenta.cupones.size());
        jTable1.setModel(t);
        TableModel tabla = jTable1.getModel();

        for (int i = 0; i < SistemaVenta.cupones.size(); i++) {
            Cupones u = SistemaVenta.cupones.get(i);
            tabla.setValueAt(u.codigo, i, 0);
            tabla.setValueAt(u.valor, i, 1);
            tabla.setValueAt(u.tipoDescuento, i, 2);
            tabla.setValueAt(u.fechaVencimiento, i, 3);
        }

    }

    private void cargarCuponesDesdeArchivo() {
        java.io.File archivo = new java.io.File("cupones.txt");

        if (!archivo.exists()) {
            System.out.println("Archivo cupones.txt no existe");
            return;
        }

        SistemaVenta.cupones.clear();

        try (BufferedReader reader = new BufferedReader(new FileReader(archivo))) {
            String encabezado = reader.readLine(); // Leer y saltar encabezado

            DateTimeFormatter formato1 = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            DateTimeFormatter formato2 = DateTimeFormatter.ofPattern("yyyy-MM-dd");

            String linea;
            while ((linea = reader.readLine()) != null) {
                if (linea.trim().isEmpty()) {
                    continue;
                }

                String[] partes = linea.split("\\|");
                if (partes.length == 4) {
                    try {
                        String codigo = partes[0];
                        double valor = Double.parseDouble(partes[1]);
                        String tipo = partes[2];

                        LocalDate fecha = null;

                        // Intentar parsear con formato1
                        try {
                            fecha = LocalDate.parse(partes[3], formato1);
                        } catch (DateTimeParseException e1) {
                            // Si falla, intentar formato2
                            fecha = LocalDate.parse(partes[3], formato2);
                        }

                        Cupones c = new Cupones(codigo, valor, tipo, fecha);
                        SistemaVenta.cupones.add(c);
                    } catch (NumberFormatException | DateTimeParseException e) {
                        System.out.println("Error parseando línea: " + linea + " - " + e.getMessage());
                    }
                } else {
                    System.out.println("Formato incorrecto en línea: " + linea);
                }
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, "Error al cargar cupones: " + e.getMessage());
        }
    }

    private void pintarTabla() {
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0); // Limpiar la tabla
        for (Cupones u : SistemaVenta.cupones) {
            modelo.addRow(new Object[]{
                u.codigo,
                u.valor,
                u.tipoDescuento,
                u.fechaVencimiento
            });
        }
    }

    private void guardarTodosLosCuponesEnArchivo() {
        try (PrintWriter writer = new PrintWriter(new FileWriter("cupones.txt"))) {
            writer.println("codigo_descuento|descuento|tipo_descuento|fecha_vencimiento");

            for (Cupones c : SistemaVenta.cupones) {
                writer.println(c.codigo + "|" + c.valor + "|" + c.tipoDescuento + "|" + c.fechaVencimiento);
            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al guardar cupones: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textField5 = new java.awt.TextField();
        textField6 = new java.awt.TextField();
        textField8 = new java.awt.TextField();
        jLabel5 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        exportarCSV = new javax.swing.JButton();
        importarCSV = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setBackground(new java.awt.Color(237, 206, 225));
        jButton1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(207, 114, 161));
        jButton1.setText("Cerrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton2.setBackground(new java.awt.Color(237, 206, 225));
        jButton2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(207, 114, 161));
        jButton2.setText("Modificar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(237, 206, 225));
        jButton3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(207, 114, 161));
        jButton3.setText("Borrrar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Porcentaje", "Monto fijo" }));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(207, 114, 161));
        jLabel2.setText("Codigo:");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(207, 114, 161));
        jLabel3.setText("Valor de descuento:");

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(207, 114, 161));
        jLabel4.setText("Fecha de vencimiento:");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(207, 114, 161));
        jLabel5.setText("Tipo de descuento:");

        jButton4.setBackground(new java.awt.Color(237, 206, 225));
        jButton4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(207, 114, 161));
        jButton4.setText("Guardar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(237, 206, 225));
        jButton6.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(207, 114, 161));
        jButton6.setText("Actualizar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        exportarCSV.setBackground(new java.awt.Color(237, 206, 225));
        exportarCSV.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        exportarCSV.setForeground(new java.awt.Color(207, 114, 161));
        exportarCSV.setText("Exportar csv");
        exportarCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportarCSVActionPerformed(evt);
            }
        });

        importarCSV.setBackground(new java.awt.Color(237, 206, 225));
        importarCSV.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        importarCSV.setForeground(new java.awt.Color(207, 114, 161));
        importarCSV.setText("Importar csv");
        importarCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importarCSVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textField8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(textField6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(21, 21, 21)
                                .addComponent(textField5, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(exportarCSV)
                            .addComponent(importarCSV))))
                .addContainerGap(14, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton6))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(157, 157, 157)
                        .addComponent(jButton1)))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(textField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(textField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(textField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(70, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(exportarCSV)
                        .addGap(18, 18, 18)
                        .addComponent(importarCSV)
                        .addGap(47, 47, 47))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int modificar = jTable1.getSelectedRow();
        if (modificar > -1) {
            cupon = SistemaVenta.cupones.get(modificar);
            textField5.setText(cupon.codigo); // Accediendo directamente
            textField6.setText(String.valueOf(cupon.valor)); // Convertir a String
            jComboBox1.setSelectedItem(cupon.tipoDescuento); // Ajustar el JComboBox

            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
            textField8.setText(cupon.fechaVencimiento.format(formatter));
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un elemento a modificar");
        }    // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int borrar = jTable1.getSelectedRow();
        if (JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar el cupon?") == 0) {
            SistemaVenta.cupones.remove(borrar);
            pintarTabla();
            JOptionPane.showMessageDialog(this, "Cupon eliminado");
            guardarTodosLosCuponesEnArchivo();
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione un elemento a borrar");

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (cupon != null) {
            cupon.codigo = textField5.getText();

            try {
                double valor = Double.parseDouble(textField6.getText());
                cupon.valor = valor; //valor como decimal
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "El valor debe ser un número decimal válido.");
                return;
            }

            // Asignar el tipo de descuento
            cupon.tipoDescuento = (String) jComboBox1.getSelectedItem();

            // Manejar la fecha de vencimiento
            try {
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                cupon.fechaVencimiento = LocalDate.parse(textField8.getText(), formatter);

            } catch (DateTimeParseException e) {
                JOptionPane.showMessageDialog(this, "Fecha inválida. Use el formato yyyy-MM-dd.");
                return;
            }

            pintarTabla(); // Actualiza la tabla
            JOptionPane.showMessageDialog(this, "Cupón modificado exitosamente.");
            guardarTodosLosCuponesEnArchivo();

        } else {
            JOptionPane.showMessageDialog(this, "Ningún cupón seleccionado.");
        }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        cargarCuponesDesdeArchivo(); // Cargar cupones desde el archivo
        pintarTabla();         // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void exportarCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportarCSVActionPerformed
        try (PrintWriter writer = new PrintWriter(new FileWriter("cupones.txt"))) {
            writer.println("codigo_descuento|valor|tipo_descuento|fecha_vencimiento"); // Encabezados

            for (Cupones c : SistemaVenta.cupones) {
                writer.println(c.codigo + "|" + c.valor + "|" + c.tipoDescuento + "|" + c.fechaVencimiento);
            }

            JOptionPane.showMessageDialog(this, "Cupones exportados correctamente.");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al exportar cupones: " + e.getMessage());
        }

    }//GEN-LAST:event_exportarCSVActionPerformed

    private void importarCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importarCSVActionPerformed
        File archivo = new File("cupones.txt");

        if (!archivo.exists()) {
            JOptionPane.showMessageDialog(this, "El archivo cupones.txt no existe.");
            return;
        }

        try (BufferedReader reader = new BufferedReader(new FileReader(archivo))) {
            String encabezado = reader.readLine(); // Saltar encabezado 

            SistemaVenta.cupones.clear(); // Limpiar la lista actual

            String linea;
            while ((linea = reader.readLine()) != null) {
                if (linea.trim().isEmpty()) {
                    continue;
                }

                String[] partes = linea.split("\\|");
                if (partes.length == 4) {
                    String codigo = partes[0].trim();
                    double valor = Double.parseDouble(partes[1].trim());
                    String tipo = partes[2].trim();
                    LocalDate fecha = LocalDate.parse(partes[3].trim(), DateTimeFormatter.ofPattern("yyyy-MM-dd"));

                    Cupones cupon = new Cupones(codigo, valor, tipo, fecha);
                    SistemaVenta.cupones.add(cupon);
                } else {
                    System.out.println("Formato incorrecto en línea: " + linea);
                }
            }

            JOptionPane.showMessageDialog(this, "Cupones importados correctamente desde cupones.txt.");
        } catch (IOException | NumberFormatException | DateTimeParseException e) {
            JOptionPane.showMessageDialog(this, "Error al importar cupones: " + e.getMessage());
        }

    }//GEN-LAST:event_importarCSVActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exportarCSV;
    private javax.swing.JButton importarCSV;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private java.awt.TextField textField5;
    private java.awt.TextField textField6;
    private java.awt.TextField textField8;
    // End of variables declaration//GEN-END:variables
}
